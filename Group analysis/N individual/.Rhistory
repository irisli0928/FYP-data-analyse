q()
1+1
y
getwd
getwd()
?regressionBF
setwd("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/group")
library("ggplot2")
library("BayesFactor")
library("XLConnect")
library("ggpubr")
library("tidyverse")
library("broom")
library("AICcmodavg")
dataANOVA <- read.csv("ANOVA.csv", header=TRUE)
summary(dataANOVA)
oneway <- aov(learningR ~ group, data = dataANOVA)
summary(oneway)
dataANOVA <- read.csv("ANOVA.csv", header=TRUE)
summary(dataANOVA)
oneway <- aov(learningR ~ group, data = dataANOVA)
summary(oneway)
twoway <- aov(yield ~ frequency + feedback, data = dataANOVA)
twoway <- aov(learningR ~ frequency + feedback, data = dataANOVA)
summary(two.way)
summary(twoway)
blocking <- aov(learningR ~ frequency + feedback + group, data = dataANOVA)
summary(blocking)
interaction <- aov(learningR ~ frequency*feedback, data = dataANOVA)
summary(interaction)
tukey.plot.aov<-aov(learningR ~ frequency:feedback, data = dataANOVA)
tukey.plot.test<-TukeyHSD(tukey.plot.aov)
plot(tukey.plot.test, las = 1)
dataANOVA %>%
group_by(group) %>%
get_summary_stats(learningR, type = "mean_sd")
ggboxplot(dataANOVA, x = "group", y = "learningR")
ggboxplot(dataANOVA, x = "group", y = "learningR", size=2)
help("ggboxplot")
plot(tukey.plot.test, las = 1, width=0.5)
plot(tukey.plot.test, las = 2)
par(mar=c(8, 4.1, 4.1, 2.1))
plot(tukey.plot.test, las = 1)
plot(tukey.plot.test, las = 1, margin = 0.1)
plot(tukey.plot.test, las = 1, mar = 0.1)
warnings()
par(mar=c(4.1, 8, 4.1, 2.1))
plot(tukey.plot.test, las = 1, mar = 0.1)
par(mar=c(4.1, 12, 4.1, 2.1))
plot(tukey.plot.test, las = 1, mar = 0.1)
dataANOVA %>%
group_by(group) %>%
get_summary_stats(learningR, type = "mean_sd")
ggboxplot(dataANOVA, x = "group", y = "learningR")
par(mar=c(4.1, 4.1, 8, 2.1))
ggboxplot(dataANOVA, x = "group", y = "learningR")
sink(ANOVA.txt)
dataANOVA <- read.csv("ANOVA.csv", header=TRUE)
summary(dataANOVA)
oneway <- aov(learningR ~ group, data = dataANOVA)
summary(oneway)
print(oneway)
twoway <- aov(learningR ~ frequency + feedback, data = dataANOVA)
summary(twoway)
print(twoway)
interaction <- aov(learningR ~ frequency*feedback, data = dataANOVA)
summary(interaction)
print(interaction)
blocking <- aov(learningR ~ frequency + feedback + group, data = dataANOVA)
summary(blocking)
sink("ANOVA.txt")
print(oneway)
print(twoway)
print(interaction)
print(blocking)
sink("ANOVA.txt")
print("one-way ANOVA")
print(oneway)
print("=============================")
print("")
print("two-way ANOVA")
print(twoway)
print("=============================")
print("")
print("interaction")
print(interaction)
sink("ANOVA.txt")
print("one-way ANOVA")
print(oneway)
print("two-way ANOVA")
print(twoway)
print("interaction")
print(interaction)
print("blocking")
print(blocking)
summary(oneway)
sink()
summary(oneway)
View(oneway)
sink("ANOVA.txt")
dataANOVA <- read.csv("ANOVA.csv", header=TRUE)
summary(dataANOVA)
oneway <- aov(learningR ~ group, data = dataANOVA)
summary(oneway)
print("one-way ANOVA")
print(summary(oneway))
twoway <- aov(learningR ~ frequency + feedback, data = dataANOVA)
summary(twoway)
print("two-way ANOVA")
print(summary(twoway))
interaction <- aov(learningR ~ frequency*feedback, data = dataANOVA)
summary(interaction)
print("interaction")
print(summary(interaction))
blocking <- aov(learningR ~ frequency + feedback + group, data = dataANOVA)
summary(blocking)
print("blocking")
print(summary(blocking))
sink()
sink("ANOVA.txt")
print("one-way ANOVA")
print(summary(oneway))
print("two-way ANOVA")
print(summary(twoway))
print("interaction")
print(summary(interaction))
print("blocking")
print(summary(blocking))
sink()
dataTTlog <- read.csv("TTtrialLog.csv", header = TRUE)
dataTTlinear <- read.csv("TTtrialLinear.csv", header = TRUE)
dataTPlog <- read.csv("TPtrialLog.csv", header = TRUE)
dataTPlinear <- read.csv("TPtrialLinear.csv", header = TRUE)
dataBTlog <- read.csv("BTtrialLog.csv", header = TRUE)
dataBTlinear <- read.csv("BTtrialLinear.csv", header = TRUE)
dataBPlog <- read.csv("BPtrialLog.csv", header = TRUE)
dataBPlinear <- read.csv("BPtrialLinear.csv", header = TRUE)
dataNlog <- read.csv("NtrialLog.csv", header = TRUE)
dataNlinear <- read.csv("NtrialLinear.csv", header = TRUE)
rownames(dataTTlog) <- dataTTlog[, 1]
dataTTlog <- dataTTlog[, -1]
means <- rowMeans(dataTTlog, na.rm = TRUE)
dataTTlog <- cbind(dataTTlog, means)
rownames(dataTTlinear) <- dataTTlinear[, 1]
dataTTlinear <- dataTTlinear[, -1]
means <- rowMeans(dataTTlinear, na.rm = TRUE)
dataTTlinear <- cbind(dataTTlinear, means)
rownames(dataTPlog) <- dataTPlog[, 1]
dataTPlog <- dataTPlog[, -1]
means <- rowMeans(dataTPlog, na.rm = TRUE)
dataTPlog <- cbind(dataTPlog, means)
rownames(dataTPlinear) <- dataTPlinear[, 1]
dataTPlinear <- dataTPlinear[, -1]
means <- rowMeans(dataTPlinear, na.rm = TRUE)
dataTPlinear <- cbind(dataTPlinear, means)
rownames(dataBTlog) <- dataBTlog[, 1]
dataBTlog <- dataBTlog[, -1]
means <- rowMeans(dataBTlog, na.rm = TRUE)
dataBTlog <- cbind(dataBTlog, means)
rownames(dataBTlinear) <- dataBTlinear[, 1]
dataBTlinear <- dataBTlinear[, -1]
means <- rowMeans(dataBTlinear, na.rm = TRUE)
dataBTlinear <- cbind(dataBTlinear, means)
rownames(dataBPlog) <- dataBPlog[, 1]
dataBPlog <- dataBPlog[, -1]
means <- rowMeans(dataBPlog, na.rm = TRUE)
dataBPlog <- cbind(dataBPlog, means)
rownames(dataBPlinear) <- dataBPlinear[, 1]
dataBPlinear <- dataBPlinear[, -1]
means <- rowMeans(dataBPlinear, na.rm = TRUE)
dataBPlinear <- cbind(dataBPlinear, means)
rownames(dataNlog) <- dataNlog[, 1]
dataNlog <- dataNlog[, -1]
means <- rowMeans(dataNlog, na.rm = TRUE)
dataNlog <- cbind(dataNlog, means)
rownames(dataNlinear) <- dataNlinear[, 1]
dataNlinear <- dataNlinear[, -1]
means <- rowMeans(dataNlinear, na.rm = TRUE)
dataNlinear <- cbind(dataNlinear, means)
lograteTT <- as.numeric(dataTTlog["coeff trials", ])
loginterceptTT <- as.numeric(dataTTlog["coeff (Intercept)", ])
lograteTP <- as.numeric(dataTPlog["coeff trials", ])
loginterceptTP <- as.numeric(dataTPlog["coeff (Intercept)", ])
lograteBT <- as.numeric(dataBTlog["coeff trials", ])
loginterceptBT <- as.numeric(dataBTlog["coeff (Intercept)", ])
lograteBP <- as.numeric(dataBPlog["coeff trials", ])
loginterceptBP <- as.numeric(dataBPlog["coeff (Intercept)", ])
lograteN <- as.numeric(dataNlog["coeff trials", ])
loginterceptN <- as.numeric(dataNlog["coeff (Intercept)", ])
dataANOVAi <- rbind(loginterceptTT, loginterceptTP, lograteBT, lograteBP, lograteN)
View(dataANOVAi)
dataANOVAi <- as.data.frame(dataANOVAi)
View(dataANOVAi)
View(dataANOVAi)
dataANOVAi <- as.data.frame(t(dataANOVAi))
View(dataANOVAi)
View(dataANOVAi)
dataANOVAi <- data.frame(loginterceptTT = rep(NA, max(sapply(list(loginterceptTT, loginterceptTP, loginterceptBT, loginterceptBP, loginterceptN), length))))
View(dataANOVAi)
dataANOVA[1:length(loginterceptTT), 1] <- loginterceptTT
dataANOVA[1:length(loginterceptTP), 2] <- loginterceptTP
dataANOVA[1:length(loginterceptBT), 3] <- loginterceptBT
dataANOVA[1:length(loginterceptBP), 4] <- loginterceptBP
dataANOVA[1:length(loginterceptN), 5] <- loginterceptN
write.csv(dataANOVAi, "ANOVAi.csv")
dataANOVAi[1:length(loginterceptTT), 1] <- loginterceptTT
dataANOVAi[1:length(loginterceptTP), 2] <- loginterceptTP
dataANOVAi[1:length(loginterceptBT), 3] <- loginterceptBT
dataANOVAi[1:length(loginterceptBP), 4] <- loginterceptBP
dataANOVAi[1:length(loginterceptN), 5] <- loginterceptN
write.csv(dataANOVAi, "ANOVAi.csv")
write.csv(dataANOVAi, "ANOVAi.csv", row.names=FALSE, na=" ")
dataANOVAi <- read.csv("ANOVAi.csv", header=TRUE)
#ANOVA for intercept
dataANOVAi <- read.csv("ANOVAi.csv", header=TRUE)
sink("ANOVAi.txt")
summary(dataANOVAi)
#ANOVA for intercept
dataANOVAi <- read.csv("ANOVAi.csv", header=TRUE)
# sink("ANOVAi.txt")
summary(dataANOVAi)
oneway <- aov(intercept ~ group, data = dataANOVAi)
View(dataANOVAi)
#ANOVA for intercept
dataANOVAi <- read.csv("ANOVAi.csv", header=TRUE)
# sink("ANOVAi.txt")
summary(dataANOVAi)
oneway <- aov(intercept ~ group, data = dataANOVAi)
summary(oneway)
summary(oneway)
View(oneway)
twoway <- aov(intercept ~ frequency + feedback, data = dataANOVAi)
summary(twoway)
# print("two-way ANOVA")
# print(summary(twoway))
interaction <- aov(intercept ~ frequency*feedback, data = dataANOVAi)
summary(interaction)
blocking <- aov(intercept ~ frequency + feedback + group, data = dataANOVAi)
summary(blocking)
dataANOVAi <- read.csv("ANOVAi.csv", header=TRUE)
sink("ANOVAi.txt")
summary(dataANOVAi)
oneway <- aov(intercept ~ group, data = dataANOVAi)
# summary(oneway)
print("one-way ANOVA")
print(summary(oneway))
twoway <- aov(intercept ~ frequency + feedback, data = dataANOVAi)
# summary(twoway)
print("two-way ANOVA")
print(summary(twoway))
interaction <- aov(intercept ~ frequency*feedback, data = dataANOVAi)
# summary(interaction)
# # print("interaction")
# # print(summary(interaction))
blocking <- aov(intercept ~ frequency + feedback + group, data = dataANOVAi)
# summary(blocking)
print("blocking")
print(summary(blocking))
sink()
tukey.plot.aov<-aov(intercept ~ frequency:feedback, data = dataANOVAi)
tukey.plot.test<-TukeyHSD(tukey.plot.aov)
par(mar=c(4.1, 12, 4.1, 2.1))
plot(tukey.plot.test, las = 1, mar = 0.1)
dataANOVA %>%
group_by(group) %>%
get_summary_stats(learningR, type = "mean_sd")
ggboxplot(dataANOVAi, x = "group", y = "learningR")
dataANOVAi <- read.csv("ANOVAi.csv", header=TRUE)
sink("ANOVAi.txt")
summary(dataANOVAi)
oneway <- aov(intercept ~ group, data = dataANOVAi)
# summary(oneway)
print("one-way ANOVA")
print(summary(oneway))
twoway <- aov(intercept ~ frequency + feedback, data = dataANOVAi)
# summary(twoway)
print("two-way ANOVA")
print(summary(twoway))
interaction <- aov(intercept ~ frequency*feedback, data = dataANOVAi)
# summary(interaction)
# # print("interaction")
# # print(summary(interaction))
blocking <- aov(intercept ~ frequency + feedback + group, data = dataANOVAi)
# summary(blocking)
print("blocking")
print(summary(blocking))
sink()
tukey.plot.aov<-aov(intercept ~ frequency:feedback, data = dataANOVAi)
tukey.plot.test<-TukeyHSD(tukey.plot.aov)
par(mar=c(4.1, 12, 4.1, 2.1))
plot(tukey.plot.test, las = 1, mar = 0.1)
dataANOVAi %>%
group_by(group) %>%
get_summary_stats(learningR, type = "mean_sd")
ggboxplot(dataANOVAi, x = "group", y = "learningR")
dataANOVAi <- read.csv("ANOVAi.csv", header=TRUE)
sink("ANOVAi.txt")
summary(dataANOVAi)
oneway <- aov(intercept ~ group, data = dataANOVAi)
# summary(oneway)
print("one-way ANOVA")
print(summary(oneway))
twoway <- aov(intercept ~ frequency + feedback, data = dataANOVAi)
# summary(twoway)
print("two-way ANOVA")
print(summary(twoway))
interaction <- aov(intercept ~ frequency*feedback, data = dataANOVAi)
# summary(interaction)
# # print("interaction")
# # print(summary(interaction))
blocking <- aov(intercept ~ frequency + feedback + group, data = dataANOVAi)
# summary(blocking)
print("blocking")
print(summary(blocking))
sink()
tukey.plot.aov<-aov(intercept ~ frequency:feedback, data = dataANOVAi)
tukey.plot.test<-TukeyHSD(tukey.plot.aov)
par(mar=c(4.1, 12, 4.1, 2.1))
plot(tukey.plot.test, las = 1, mar = 0.1)
dataANOVAi %>%
group_by(group) %>%
get_summary_stats(intercept, type = "mean_sd")
ggboxplot(dataANOVAi, x = "group", y = "learningR")
#ANOVA for intercept
dataANOVAi <- read.csv("ANOVAi.csv", header=TRUE)
sink("ANOVAi.txt")
# summary(dataANOVAi)
oneway <- aov(intercept ~ group, data = dataANOVAi)
# summary(oneway)
print("one-way ANOVA")
print(summary(oneway))
twoway <- aov(intercept ~ frequency + feedback, data = dataANOVAi)
# summary(twoway)
print("two-way ANOVA")
print(summary(twoway))
interaction <- aov(intercept ~ frequency*feedback, data = dataANOVAi)
# summary(interaction)
print("interaction")
print(summary(interaction))
blocking <- aov(intercept ~ frequency + feedback + group, data = dataANOVAi)
# summary(blocking)
print("blocking")
print(summary(blocking))
sink()
tukey.plot.aov<-aov(intercept ~ frequency:feedback, data = dataANOVAi)
tukey.plot.test<-TukeyHSD(tukey.plot.aov)
par(mar=c(4.1, 12, 4.1, 2.1))
plot(tukey.plot.test, las = 1, mar = 0.1)
dataANOVAi %>%
group_by(group) %>%
get_summary_stats(intercept, type = "mean_sd")
ggboxplot(dataANOVAi, x = "group", y = "intercept")
source("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/TT individual/plot loop.R")
source("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/TP individual/plot loop.R")
source("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/TP individual/plot loop.R")
source("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/TP individual/plot loop.R")
individual
setwd("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/TP individual")
library("ggplot2")
library("BayesFactor")
library("XLConnect")
data <- read.csv("individual data.csv", header = TRUE)
for(i in 4:ncol(data)) {
ID <- colnames(data[i])
I <- data[ , i]
blockma <- matrix(I, ncol = 15, byrow = TRUE)
block_average <- apply(blockma, 1, mean)
block <- 1:12
trial <- 1:180
logI <- log(I)
logB <- log(block_average)
data1 <- data.frame(trial, block, block_average, logI, logB)
plot.trial <- ggplot(data,aes(trials, I)) +
geom_point() +
geom_smooth(method=lm, formula=y~log(x), colour="blue", fullrange=FALSE, level=.01) +
geom_smooth(method=lm, formula=y~x, colour="black", fullrange=FALSE, level=.01) +
geom_smooth(method=loess, formula=y~log(x), colour="green", fullrange=FALSE, level=.01) +
ylim(0,1)
plot.block <- ggplot(mapping = aes(block, block_average)) +
geom_line(colour="gray") +
geom_point() +
geom_smooth(method=lm, formula=y~log(x), colour="blue", fullrange=FALSE, level=.01) +
geom_smooth(method=lm, formula=y~x, colour="black", fullrange=FALSE, level=.01) +
geom_smooth(method=loess, formula=y~log(x), colour="green", fullrange=FALSE, level=.01) +
plot.block
ggsave(plot.trial, filename=paste("trial", ID, ".png",sep=""),device="png", path="F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/TP individual/plot/trial")
ggsave(plot.block, filename=paste("block", ID, ".png",sep=""),device="png", path="F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/TP individual/plot/block")
}
plot.block <- ggplot(mapping = aes(block, block_average)) +
geom_line(colour="gray") +
geom_point() +
geom_smooth(method=lm, formula=y~log(x), colour="blue", fullrange=FALSE, level=.01) +
geom_smooth(method=lm, formula=y~x, colour="black", fullrange=FALSE, level=.01) +
geom_smooth(method=loess, formula=y~log(x), colour="green", fullrange=FALSE, level=.01) +
plot.block
source("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/TP individual/plot loop.R")
help("ggplot")
source("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/TT individual/plot loop.R")
source("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/TT individual/plot loop.R")
source("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/TT individual/plot loop.R")
warnings()
source("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/TP individual/plot loop.R")
source("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/BT individual/plot loop.R")
source("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/BP individual/plot loop.R")
source("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/N individual/plot loop.R")
