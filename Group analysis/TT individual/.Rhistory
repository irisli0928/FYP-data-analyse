q()
1+1
y
getwd
getwd()
?regressionBF
help("rbind")
setwd("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/TT individual")
library("ggplot2")
library("BayesFactor")
library("XLConnect")
data <- read.csv("individual data.csv", header = TRUE)
datasave <- read.csv("individual data1.csv", header = TRUE)
View(data)
ID <- X67060 #extract column name
I <- X67060 #extract data to a single vector by column number
blockma <- matrix(I, ncol = 15, byrow = TRUE) #create a matrix for calculating average of every n rows in the vector
block_average <- apply(blockma, 1, mean) #calculating average
block <- 1:12
trial <- 1:180
logI <- log(I)
logB <- log(block_average)
data1 <- data.frame(trial, block, block_average, logI, logB) #record all needed var into dataframe
fitT <- lm(log(I) ~ trials, data=data)
summary(fitT)
bfT <- regressionBF(logI ~ trial, data=data1)
ID <- "X67060" #extract column name
I <- data$X67060 #extract data to a single vector by column number
blockma <- matrix(I, ncol = 15, byrow = TRUE) #create a matrix for calculating average of every n rows in the vector
block_average <- apply(blockma, 1, mean) #calculating average
block <- 1:12
trial <- 1:180
logI <- log(I)
logB <- log(block_average)
data1 <- data.frame(trial, block, block_average, logI, logB) #record all needed var into dataframe
fitT <- lm(log(I) ~ trials, data=data)
summary(fitT)
bfT <- regressionBF(logI ~ trial, data=data1)
x <- rbind(datasave, t(as.numeric(coefficients(fit))), t(as.numeric(summary(fit)$coefficients[, 4])), summary(fit)$r.squared)
x <- rbind(datasave, t(as.numeric(coefficients(fitT))), t(as.numeric(summary(fitT)$coefficients[, 4])), summary(fitT)$r.squared)
x <- rbind(datasave, t(as.numeric(coefficients(fitT))), t(as.numeric(summary(fitT)$coefficients[180,])), summary(fitT)$r.squared)
x <- data.frame (datasave, summary(fitT))
x <- (datasave, summary(fitT))
x <- cbind(datasave, t(as.numeric(coefficients(fitT)))); names(x)[(length(x) - 2):length(x)] <- names(coefficients(fitT))
View(x)
x <- rbind(datasave, t(as.numeric(coefficients(fitT)))); names(x)[(length(x) - 2):length(x)] <- names(coefficients(fitT))
help("names")
x <- rbind(datasave, t(as.numeric(coefficients(fitT)))); names(x) <- names(coefficients(fitT))
x <- rbind(datasave, t(as.numeric(coefficients(fitT)))))
x <- rbind(datasave, t(as.numeric(coefficients(fitT)))
View(x)
help(cbind)
m <- cbind(1, 1:7)
View(m)
x <- cbind(datasave, t(as.numeric(coefficients(fitT))))
View(x)
x <- rbind(datasave, t(as.numeric(coefficients(fitT))))
source("~/.active-rstudio-document")
View(df)
View(df.)
View(df.1)
View(df1)
b0 <- gl(3,4, labels=letters[1:3])
b0
bf <- setNames(b0, paste0("o", seq_along(b0)))
bf
df  <- data.frame(a = 1, B = b0, f = gl(4,3))
View(df)
source("~/.active-rstudio-document")
dd <- 10
rbind(1:4, c = 2, "a++" = 10, dd, deparse.level = 0) # middle 2 rownames
b0 <- gl(3,4, labels=letters[1:3])
bf <- setNames(b0, paste0("o", seq_along(b0)))
df  <- data.frame(a = 1, B = b0, f = gl(4,3))
df. <- data.frame(a = 1, B = bf, f = gl(4,3))
new <- data.frame(a = 8, B ="B", f = "1")
View(new)
(df1  <- rbind(df , new))
setwd("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/TT individual")
library("ggplot2")
library("BayesFactor")
library("XLConnect")
data <- read.csv("individual data.csv", header = TRUE)
datasave <- read.csv("individual data1.csv", header = TRUE)
x <- cbind(datasave, t(as.numeric(coefficients(fitT)))); names(x)[(length(x) - 2):length(x)] <- names(coefficients(fitT))
ID <- "X67060" #extract column name
I <- data$X67060 #extract data to a single vector by column number
blockma <- matrix(I, ncol = 15, byrow = TRUE) #create a matrix for calculating average of every n rows in the vector
block_average <- apply(blockma, 1, mean) #calculating average
block <- 1:12
trial <- 1:180
logI <- log(I)
logB <- log(block_average)
data1 <- data.frame(trial, block, block_average, logI, logB) #record all needed var into dataframe
fitT <- lm(log(I) ~ trials, data=data)
summary(fitT)
bfT <- regressionBF(logI ~ trial, data=data1)
x <- cbind(datasave, t(as.numeric(coefficients(fitT)))); names(x)[(length(x) - 2):length(x)] <- names(coefficients(fitT))
View(x)
setwd("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/TT individual")
library("ggplot2")
library("BayesFactor")
library("XLConnect")
data <- read.csv("individual data.csv", header = TRUE)
datasave <- read.csv("individual data1.csv", header = TRUE)
ID <- "X67060" #extract column name
I <- data$X67060 #extract data to a single vector by column number
blockma <- matrix(I, ncol = 15, byrow = TRUE) #create a matrix for calculating average of every n rows in the vector
block_average <- apply(blockma, 1, mean) #calculating average
block <- 1:12
trial <- 1:180
logI <- log(I)
logB <- log(block_average)
data1 <- data.frame(trial, block, block_average, logI, logB) #record all needed var into dataframe
fitT <- lm(log(I) ~ trials, data=data)
summary(fitT)
bfT <- regressionBF(logI ~ trial, data=data1)
x <- cbind(datasave, t(as.numeric(coefficients(fitT))))
View(x)
setwd("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/TT individual")
library("ggplot2")
library("BayesFactor")
library("XLConnect")
data <- read.csv("individual data.csv", header = TRUE)
datasave <- read.csv("individual data1.csv", header = TRUE)
ID <- "X67060" #extract column name
I <- data$X67060 #extract data to a single vector by column number
blockma <- matrix(I, ncol = 15, byrow = TRUE) #create a matrix for calculating average of every n rows in the vector
block_average <- apply(blockma, 1, mean) #calculating average
block <- 1:12
trial <- 1:180
logI <- log(I)
logB <- log(block_average)
data1 <- data.frame(trial, block, block_average, logI, logB) #record all needed var into dataframe
fitT <- lm(log(I) ~ trials, data=data)
summary(fitT)
bfT <- regressionBF(logI ~ trial, data=data1)
x <- rbind(datasave, t(as.numeric(coefficients(fitT))))
help(t)
merge
help("as.numeric")
as.numeric(coefficients(fitT))))
as.numeric(coefficients(fitT))
View(fitT)
summary(fitT)
t(as.numeric(summary(fit)$coefficients[, 4]))
as.numeric(summary(fit)$coefficients[, 4])
t(as.numeric(summary(fitT)$coefficients[, 4]))
as.numeric(summary(fitT)$coefficients[, 4])
x <- t(as.numeric(coefficients(fitT)))), t(as.numeric(summary(fitT)$coefficients[, 4]))
x <- (t(as.numeric(coefficients(fitT)))), t(as.numeric(summary(fitT)$coefficients[, 4])))
x <- (as.numeric(coefficients(fitT))), as.numeric(summary(fitT)$coefficients[, 4]))
x <- data.frame((as.numeric(coefficients(fitT))), as.numeric(summary(fitT)$coefficients[, 4])))
x <- data.frame((as.numeric(coefficients(fitT))), as.numeric(summary(fitT)$coefficients[, 4]))
View(x)
x <- rbind((as.numeric(coefficients(fitT))), as.numeric(summary(fitT)$coefficients[, 4]))
View(x)
x <- cbind((as.numeric(coefficients(fitT))), as.numeric(summary(fitT)$coefficients[, 4]))
View(x)
x <- rbind((t(as.numeric(coefficients(fitT)))), t(as.numeric(summary(fitT)$coefficients[, 4])))
View(x)
t(as.numeric(coefficients(fitT)))
t(as.numeric(summary(fitT)$coefficients[, 4]
t(as.numeric(summary(fitT)$coefficients[, 4])
t(as.numeric(summary(fitT)$coefficients[, 4]))
m <- t(as.numeric(coefficients(fitT)))
View(m)
a <- t(as.numeric(summary(fitT)$coefficients[, 4]))
View(a)
x <- cbind(a,m)
View(x)
x <- cbind(t(as.numeric(coefficients(fitT))),t(as.numeric(summary(fitT)$coefficients[, 4])))
View(x)
extractBF(bfT)
View(bfT)
# logrithmic regression for trial average
dataS <- data.frame()
View(dataS)
dataO <- cbind(t(as.numeric(coefficients(fitT))),t(as.numeric(summary(fitT)$coefficients[, 2])), t(as.numeric(summary(fitT)$coefficients[, 4])), summary(fitT)$r.squared)
View(x)
View(dataO)
# logrithmic regression for trial average
dataS <- data.frame(1,1,1,1,1)
View(dataO)
View(dataS)
# logrithmic regression for trial average
dataS <- data.frame()
View(dataS)
setwd("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/TT individual")
library("ggplot2")
library("BayesFactor")
library("XLConnect")
data <- read.csv("individual data.csv", header = TRUE)
datasave <- read.csv("individual data1.csv", header = TRUE)
# logrithmic regression for trial average
dataS <- data.frame()
for(i in 5:ncol(data)) {
ID <- colnames(data[i]) #extract column name
I <- data[ , i] #extract data to a single vector by column number
blockma <- matrix(I, ncol = 15, byrow = TRUE) #create a matrix for calculating average of every n rows in the vector
block_average <- apply(blockma, 1, mean) #calculating average
block <- 1:12
trial <- 1:180
logI <- log(I)
logB <- log(block_average)
data1 <- data.frame(trial, block, block_average, logI, logB) #record all needed var into dataframe
fitT <- lm(log(I) ~ trials, data=data)
summary(fitT)
bfT <- regressionBF(logI ~ trial, data=data1)
extractBF(bfT)
dataO <- cbind(t(as.numeric(coefficients(fitT))),t(as.numeric(summary(fitT)$coefficients[, 2])), t(as.numeric(summary(fitT)$coefficients[, 4])), summary(fitT)$r.squared)
dataS <- rbind(dataS, dataO)
}
View(dataS)
dataS <- data.frame(r1= row.names(dataS), dataS, row.names=NULL)
View(dataS)
dataTiralSave <- data.frame(r1= row.names(dataS), dataS, row.names=NULL)
View(datasave)
View(dataTiralSave)
setwd("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/TT individual")
library("ggplot2")
library("BayesFactor")
library("XLConnect")
data <- read.csv("individual data.csv", header = TRUE)
datasave <- read.csv("individual data1.csv", header = TRUE)
# logarithmic regression for trial average
dataS <- data.frame() #create a data frame for saving output
for(i in 5:ncol(data)) {
ID <- colnames(data[i]) #extract column name
I <- data[ , i] #extract data to a single vector by column number
blockma <- matrix(I, ncol = 15, byrow = TRUE) #create a matrix for calculating average of every n rows in the vector
block_average <- apply(blockma, 1, mean) #calculating average
block <- 1:12
trial <- 1:180
logI <- log(I)
logB <- log(block_average)
data1 <- data.frame(trial, block, block_average, logI, logB) #record all needed var into dataframe
fitT <- lm(log(I) ~ trials, data=data)
summary(fitT)
bfT <- regressionBF(logI ~ trial, data=data1)
extractBF(bfT)
#save output in this loop, each number in a seperate column
dataO <- cbind(t(as.numeric(coefficients(fitT))),t(as.numeric(summary(fitT)$coefficients[, 2])), t(as.numeric(summary(fitT)$coefficients[, 4])), summary(fitT)$r.squared)
#save output in every loop into one data frame by adding rows
dataS <- rbind(dataS, dataO)
}
dataTiralSave <- data.frame(dataS, row.names=NULL)
View(datasave)
View(dataS)
View(fitT)
View(dataTiralSave)
View(data)
# logrithmic regression for block average
dataBlockSave <- data.frame()
for(i in 5:ncol(data)) {
ID <- colnames(data[i])
I <- data[ , i]
blockma <- matrix(I, ncol = 15, byrow = TRUE)
block_average <- apply(blockma, 1, mean)
block <- 1:12
trial <- 1:180
logI <- log(I)
logB <- log(block_average)
data1 <- data.frame(trial, block, block_average, logI, logB)
fitB <- lm(log(block_average) ~ block)
summary(fitB)
bfB <- regressionBF(logB ~ block, data=data1)
extractBF(bfB)
dataO <- cbind(t(as.numeric(coefficients(fitB))),t(as.numeric(summary(fitB)$coefficients[, 2])), t(as.numeric(summary(fitB)$coefficients[, 4])), summary(fitB)$r.squared)
dataBlockSave <- rbind(dataBlockSave, dataO)
}
View(dataBlockSave)
dataBlockSave <- as.data.frame(t(dataBlockSave))
View(dataBlockSave)
dataTiralSave <- as.data.frame(t(dataTiralSave))
View(dataTiralSave)
