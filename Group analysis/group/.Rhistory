help("read.csv")
dataTiralSave <- read.csv("TrialResult.csv", header = TRUE)
write.csv(dataTiralSave, "TrialResult.csv")
write.csv(dataTiralSave, "TrialResult.csv")
, row.names = TRUE
write.csv(dataTiralSave, "TrialResult.csv", row.names = TRUE)
print(rowMeans(data1, na.rm = TRUE))
rownames(dataTiralSave) <- dataTiralSave[, 1] #use first row as column name
dataTiralSave <- dataTiralSave[, -1]
print(rowMeans(dataTiralSave, na.rm = TRUE))
means <- rowMeans(dataTiralSave, na.rm = TRUE))
means <- rowMeans(dataTiralSave, na.rm = TRUE)
dataTiralSave <- cbind(dataTiralSave, means)
source("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/TT individual/log loop (csv).R")
source("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/TT individual/log loop (csv).R")
source("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/TT individual/log loop (csv).R")
setwd("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/TT individual")
library("ggplot2")
library("BayesFactor")
library("XLConnect")
data <- read.csv("individual data.csv", header = TRUE)
datasave <- read.csv("individual data1.csv", header = TRUE)
# logarithmic regression for trial average
dataTiralSave <- data.frame()
dataTiralSave1 <- data.frame()#create a data frame for saving output
for(i in 5:ncol(data)) {
ID <- colnames(data[i]) #extract column name
I <- data[ , i] #extract data to a single vector by column number
blockma <- matrix(I, ncol = 15, byrow = TRUE) #create a matrix for calculating average of every n rows in the vector
block_average <- apply(blockma, 1, mean) #calculating average
block <- 1:12
trial <- 1:180
logI <- log(I)
logB <- log(block_average)
data1 <- data.frame(trial, block, block_average, logI, logB) #record all needed var into dataframe
fitT <- lm(log(I) ~ trials, data=data)
fitT1 <- lm(I ~ trials, data=data)
summary(fitT)
bfT <- regressionBF(logI ~ trial, data=data1)
bfT1 <- regressionBF(I ~ trials, data=data)
extractBF(bfT)
#save output in this loop, each number in a seperate column
dataO <- cbind(ID, t(as.numeric(coefficients(fitT))),t(as.numeric(summary(fitT)$coefficients[, 2])), t(as.numeric(summary(fitT)$coefficients[, 4])), t(as.numeric(summary(fitT)$r.squared)), t(as.numeric(extractBF(bfT)$bf)))
dataO1 <- cbind(ID, t(as.numeric(coefficients(fitT1))),t(as.numeric(summary(fitT1)$coefficients[, 2])), t(as.numeric(summary(fitT1)$coefficients[, 4])), t(as.numeric(summary(fitT1)$r.squared)), t(as.numeric(extractBF(bfT1)$bf)))
#save output in every loop into one data frame by adding rows
dataTiralSave <- rbind(dataTiralSave, dataO)
dataTiralSave1 <- rbind(dataTiralSave1, dataO1)
}
fitT1
summary(fitT1)
summary(fitT)
source("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/TT individual/log loop (csv).R")
ID <- colnames(data[i]) #extract column name
for(i in 5:ncol(data)) {
ID <- colnames(data[i]) #extract column name
I <- data[ , i] #extract data to a single vector by column number
blockma <- matrix(I, ncol = 15, byrow = TRUE) #create a matrix for calculating average of every n rows in the vector
block_average <- apply(blockma, 1, mean) #calculating average
block <- 1:12
trial <- 1:180
logI <- log(I)
logB <- log(block_average)
data1 <- data.frame(trial, block, block_average, logI, logB) #record all needed var into dataframe
fitT <- lm(log(I) ~ trials, data=data)
fitT1 <- lm(I ~ trials, data=data)
summary(fitT)
summary(fitT1)
bfT <- regressionBF(logI ~ trial, data=data1)
bfT1 <- regressionBF(I ~ trials, data=data)
extractBF(bfT)
extractBF(bfT1)
#save output in this loop, each number in a seperate column
dataO <- cbind(ID, t(as.numeric(coefficients(fitT))),t(as.numeric(summary(fitT)$coefficients[, 2])), t(as.numeric(summary(fitT)$coefficients[, 4])), t(as.numeric(summary(fitT)$r.squared)), t(as.numeric(extractBF(bfT)$bf)))
dataO1 <- cbind(ID, t(as.numeric(coefficients(fitT1))),t(as.numeric(summary(fitT1)$coefficients[, 2])), t(as.numeric(summary(fitT1)$coefficients[, 4])), t(as.numeric(summary(fitT1)$r.squared)), t(as.numeric(extractBF(bfT1)$bf)))
#save output in every loop into one data frame by adding rows
dataTiralSave <- rbind(dataTiralSave, dataO)
dataTiralSave1 <- rbind(dataTiralSave1, dataO1)
}
source("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/TT individual/log loop (csv).R")
source("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/TT individual/log loop (csv).R")
# logarithmic regression for trial average
dataTiralSave <- data.frame()#create a data frame for saving output
for(i in 5:ncol(data)) {
ID <- colnames(data[i]) #extract column name
I <- data[ , i] #extract data to a single vector by column number
blockma <- matrix(I, ncol = 15, byrow = TRUE) #create a matrix for calculating average of every n rows in the vector
block_average <- apply(blockma, 1, mean) #calculating average
block <- 1:12
trial <- 1:180
logI <- log(I)
logB <- log(block_average)
data1 <- data.frame(trial, block, block_average, logI, logB) #record all needed var into dataframe
fitT <- lm(log(I) ~ trials, data=data)
summary(fitT)
bfT <- regressionBF(logI ~ trial, data=data1)
extractBF(bfT)
#save output in this loop, each number in a seperate column
dataO <- cbind(ID, t(as.numeric(coefficients(fitT))),t(as.numeric(summary(fitT)$coefficients[, 2])), t(as.numeric(summary(fitT)$coefficients[, 4])), t(as.numeric(summary(fitT)$r.squared)), t(as.numeric(extractBF(bfT)$bf)))
#save output in every loop into one data frame by adding rows
dataTiralSave <- rbind(dataTiralSave, dataO)
}
names(dataTiralSave) <- c("ID", paste("coeff", names(coefficients(fitT))), paste("Std. Error", names(summary(fitT)$coefficients[, 2])), paste("P-value", names(summary(fitT)$coefficients[, 4])), "R-squared", "BayesFactor")
dataTiralSave <- as.data.frame(t(dataTiralSave)) #swith column and row
colnames(dataTiralSave) <- dataTiralSave[1,] #use first row as column name
dataTiralSave <- dataTiralSave[-1, ] #delete first row
write.csv(dataTiralSave, "TTtrialLog.csv", row.names = TRUE)
#linear regression
LinearSaveT <- data.frame()
for(i in 5:ncol(data)){
ID <- colnames(data[i])
I <- data[ , i]
linearT <- lm(I~trials, data=data)
bfLinearT <- regressionBF(I~trials, data=data)
dataO <- cbind(ID, t(as.numeric(coefficients(linearT))),t(as.numeric(summary(linearT)$coefficients[, 2])), t(as.numeric(summary(linearT)$coefficients[, 4])), t(as.numeric(summary(linearT)$r.squared)), t(as.numeric(extractBF(bfLinearT)$bf)))
LinearSaveT <- rbind(LinearSaveT, dataO)
}
View(data)
linearT <- lm(I~trials, data=data)
linearT
bfLinearT <- regressionBF(I~trials, data=data)
View(data)
bfLinearT <- regressionBF(I ~ trials, data=data)
trial <- 1:180
linearT <- lm(I~trial, data=data)
linearT
bfLinearT <- regressionBF(I ~ trial, data=data)
data2 <- data.frame(I, trial)
linearT <- lm(I~trial, data=data2)
linearT
bfLinearT <- regressionBF(I ~ trial, data=data2)
bfLinearT
#linear regression
LinearSaveT <- data.frame()
for(i in 5:ncol(data)){
ID <- colnames(data[i])
I <- data[ , i]
trial <- 1:180
data2 <- data.frame(I, trial)
linearT <- lm(I~trial, data=data2)
bfLinearT <- regressionBF(I ~ trial, data=data2)
dataO <- cbind(ID, t(as.numeric(coefficients(linearT))), t(as.numeric(summary(linearT)$coefficients[, 2])), t(as.numeric(summary(linearT)$coefficients[, 4])), t(as.numeric(summary(linearT)$r.squared)), t(as.numeric(extractBF(bfLinearT)$bf)))
LinearSaveT <- rbind(LinearSaveT, dataO)
}
names(LinearSaveT) <- c("ID", paste("coeff", names(coefficients(linearT))), paste("Std. Error", names(summary(linearT)$coefficients[, 2])), paste("P-value", names(summary(linearT)$coefficients[, 4])), "R-squared", "BayesFactor")
LinearSaveT <- as.data.frame(t(LinearSaveT))
colnames(LinearSaveT) <- LinearSaveT[1,]
LinearSaveT <- LinearSaveT[-1, ]
write.csv(LinearSaveT, "TTtrialLinear.csv", row.names = TRUE)
#linear regression
LinearSaveT <- data.frame()
LinearSaveB <- data.frame()
for(i in 5:ncol(data)){
ID <- colnames(data[i])
I <- data[ , i]
trial <- 1:180
blockma <- matrix(I, ncol = 15, byrow = TRUE)
block_average <- apply(blockma, 1, mean)
block <- 1:12
data2 <- data.frame(I, trial, block, block_average)
linearT <- lm(I~trial, data=data2)
linearB <- lm(block_average~block, data=data2)
bfLinearT <- regressionBF(I ~ trial, data=data2)
bfLinearB <- regressionBF(block_average~block, data=data2)
dataO <- cbind(ID, t(as.numeric(coefficients(linearT))), t(as.numeric(summary(linearT)$coefficients[, 2])), t(as.numeric(summary(linearT)$coefficients[, 4])), t(as.numeric(summary(linearT)$r.squared)), t(as.numeric(extractBF(bfLinearT)$bf)))
dataO1 <- cbind(ID, t(as.numeric(coefficients(linearB))), t(as.numeric(summary(linearB)$coefficients[, 2])), t(as.numeric(summary(linearB)$coefficients[, 4])), t(as.numeric(summary(linearB)$r.squared)), t(as.numeric(extractBF(bfLinearB)$bf)))
LinearSaveT <- rbind(LinearSaveT, dataO)
LinearSaveB <- rbind(LinearSaveB, dataO1)
}
names(LinearSaveT) <- c("ID", paste("coeff", names(coefficients(linearT))), paste("Std. Error", names(summary(linearT)$coefficients[, 2])), paste("P-value", names(summary(linearT)$coefficients[, 4])), "R-squared", "BayesFactor")
names(LinearSaveB) <- c("ID", paste("coeff", names(coefficients(linearB))), paste("Std. Error", names(summary(linearB)$coefficients[, 2])), paste("P-value", names(summary(linearB)$coefficients[, 4])), "R-squared", "BayesFactor")
LinearSaveT <- as.data.frame(t(LinearSaveT))
colnames(LinearSaveT) <- LinearSaveT[1,]
LinearSaveT <- LinearSaveT[-1, ]
write.csv(LinearSaveT, "TPtrialLinear.csv", row.names = TRUE)
LinearSaveB <- as.data.frame(t(LinearSaveB))
colnames(LinearSaveB) <- LinearSaveB[1,]
LinearSaveB <- LinearSaveB[-1, ]
write.csv(LinearSaveB, "TPblockLinear.csv", row.names = TRUE)
setwd("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/TP individual")
library("ggplot2")
library("BayesFactor")
library("XLConnect")
data <- read.csv("individual data.csv", header = TRUE)
setwd("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/TP individual")
library("ggplot2")
library("BayesFactor")
library("XLConnect")
data <- read.csv("individual data.csv", header = TRUE)
View(data)
# logarithmic regression for trial average
dataTiralSave <- data.frame()#create a data frame for saving output
dataBlockSave <- data.frame()
for(i in 4:ncol(data)) {
ID <- colnames(data[i]) #extract column name
I <- data[ , i] #extract data to a single vector by column number
blockma <- matrix(I, ncol = 15, byrow = TRUE) #create a matrix for calculating average of every n rows in the vector
block_average <- apply(blockma, 1, mean) #calculating average
block <- 1:12
trial <- 1:180
logI <- log(I)
logB <- log(block_average)
data1 <- data.frame(trial, block, block_average, logI, logB) #record all needed var into dataframe
fitT <- lm(log(I) ~ trials, data=data)
fitB <- lm(log(block_average) ~ block)
bfT <- regressionBF(logI ~ trial, data=data1)
bfB <- regressionBF(logB ~ block, data=data1)
#save output in this loop, each number in a seperate column
dataO <- cbind(ID, t(as.numeric(coefficients(fitT))),t(as.numeric(summary(fitT)$coefficients[, 2])), t(as.numeric(summary(fitT)$coefficients[, 4])), t(as.numeric(summary(fitT)$r.squared)), t(as.numeric(extractBF(bfT)$bf)))
dataO1 <- cbind(ID, t(as.numeric(coefficients(fitB))),t(as.numeric(summary(fitB)$coefficients[, 2])), t(as.numeric(summary(fitB)$coefficients[, 4])), t(as.numeric(summary(fitB)$r.squared)), t(as.numeric(extractBF(bfB)$bf)))
#save output in every loop into one data frame by adding rows
dataTiralSave <- rbind(dataTiralSave, dataO)
dataBlockSave <- rbind(dataBlockSave, dataO1)
}
names(dataTiralSave) <- c("ID", paste("coeff", names(coefficients(fitT))), paste("Std. Error", names(summary(fitT)$coefficients[, 2])), paste("P-value", names(summary(fitT)$coefficients[, 4])), "R-squared", "BayesFactor")
dataTiralSave <- as.data.frame(t(dataTiralSave)) #swith column and row
colnames(dataTiralSave) <- dataTiralSave[1,] #use first row as column name
dataTiralSave <- dataTiralSave[-1, ] #delete first row
write.csv(dataTiralSave, "TPtrialLog1.csv", row.names = TRUE)
names(dataBlockSave) <- c("ID", paste("coeff", names(coefficients(fitB))), paste("Std. Error", names(summary(fitB)$coefficients[, 2])), paste("P-value", names(summary(fitB)$coefficients[, 4])), "R-squared", "BayesFactor")
dataBlockSave <- as.data.frame(t(dataBlockSave))
colnames(dataBlockSave) <- dataBlockSave[1,]
dataBlockSave <- dataBlockSave[-1, ]
write.csv(dataBlockSave, "TPblocklog1.csv", row.names = TRUE)
View(dataO)
View(dataO)
# logrithmic regression for block average
dataBlockSave <- data.frame()
for(i in 4:ncol(data)) {
ID <- colnames(data[i])
I <- data[ , i]
blockma <- matrix(I, ncol = 15, byrow = TRUE)
block_average <- apply(blockma, 1, mean)
block <- 1:12
trial <- 1:180
logI <- log(I)
logB <- log(block_average)
data1 <- data.frame(trial, block, block_average, logI, logB)
fitB <- lm(log(block_average) ~ block)
summary(fitB)
bfB <- regressionBF(logB ~ block, data=data1)
extractBF(bfB)
dataO <- cbind(ID, t(as.numeric(coefficients(fitB))),t(as.numeric(summary(fitB)$coefficients[, 2])), t(as.numeric(summary(fitB)$coefficients[, 4])), t(as.numeric(summary(fitB)$r.squared)), t(as.numeric(extractBF(bfB)$bf)))
dataBlockSave <- rbind(dataBlockSave, dataO)
}
names(dataBlockSave) <- c("ID", paste("coeff", names(coefficients(fitB))), paste("Std. Error", names(summary(fitB)$coefficients[, 2])), paste("P-value", names(summary(fitB)$coefficients[, 4])), "R-squared", "BayesFactor")
dataBlockSave <- as.data.frame(t(dataBlockSave))
colnames(dataBlockSave) <- dataBlockSave[1,]
dataBlockSave <- dataBlockSave[-1, ]
write.csv(dataBlockSave, "TPblocklog.csv", row.names = TRUE)
source("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/TP individual/statistic loop (csv).R")
setwd("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/BP individual")
library("ggplot2")
library("BayesFactor")
library("XLConnect")
data <- read.csv("individual data.csv", header = TRUE)
setwd("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/BP individual")
library("ggplot2")
library("BayesFactor")
library("XLConnect")
data <- read.csv("individual data.csv", header = TRUE)
View(data)
source("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/BP individual/statistic loop (csv).R")
setwd("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/BT individual")
library("ggplot2")
library("BayesFactor")
library("XLConnect")
data <- read.csv("individual data.csv", header = TRUE)
setwd("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/BT individual")
library("ggplot2")
library("BayesFactor")
library("XLConnect")
data <- read.csv("individual data.csv", header = TRUE)
View(data)
source("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/BT individual/statistic loop (csv).R")
source("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/BT individual/statistic loop (csv).R")
setwd("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/N individual")
library("ggplot2")
library("BayesFactor")
library("XLConnect")
data <- read.csv("individual data.csv", header = TRUE)
setwd("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/N individual")
library("ggplot2")
library("BayesFactor")
library("XLConnect")
data <- read.csv("individual data.csv", header = TRUE)
View(data)
source("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/N individual/statistic loop (csv).R")
setwd("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/TT individual")
library("ggplot2")
library("BayesFactor")
library("XLConnect")
data <- read.csv("individual data.csv", header = TRUE)
View(data)
source("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/TT individual/statistic loop (csv).R")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
View(dataTTlog)
View(dataTPlog)
View(dataTTlog)
lograteTT <- dataTTlog["coeff trials", "means"]
loginterceptTT <- dataTTlog["coeff (Intercept)", "means"]
lograteTP <- dataTPlog["coeff trials", "means"]
loginterceptTP <- dataTPlog["coeff (Intercept)", "means"]
lograteTT <- dataTTlog["coeff trials", "means"]
loginterceptTT <- dataTTlog["coeff (Intercept)", "means"]
lograteTP <- dataTPlog["coeff trials", "means"]
loginterceptTP <- dataTPlog["coeff (Intercept)", "means"]
lograteBT <- dataBTlog["coeff trials", "means"]
loginterceptBT <- dataBTlog["coeff (Intercept)", "means"]
lograteBP <- dataBPlog["coeff trials", "means"]
loginterceptBP <- dataBPlog["coeff (Intercept)", "means"]
lograteN <- dataNlog["coeff trials", "means"]
loginterceptN <- dataNlog["coeff (Intercept)", "means"]
source("~/.active-rstudio-document")
setwd("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/group")
library("ggplot2")
library("BayesFactor")
library("XLConnect")
dataTTlog <- read.csv("TTblockLog.csv", header = TRUE)
dataTTlinear <- read.csv("TTblockLinear.csv", header = TRUE)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
View(dataTTlog)
linearrateTT <- dataTTlinear["coeff trials", "means"]
linearinterceptTT <- dataTTlinear["coeff (Intercept)", "means"]
linearrateTP <- dataTPlinear["coeff trials", "means"]
linearinterceptTP <- dataTPlinear["coeff (Intercept)", "means"]
linearrateBT <- dataBTlinear["coeff trials", "means"]
linearinterceptBT <- dataBTlinear["coeff (Intercept)", "means"]
linearrateBP <- dataBPlinear["coeff trials", "means"]
linearinterceptBP <- dataBPlinear["coeff (Intercept)", "means"]
linearrateN <- dataNlinear["coeff trials", "means"]
linearinterceptN <- dataNlinear["coeff (Intercept)", "means"]
View(dataBTlinear)
View(dataBPlog)
View(dataBPlinear)
View(dataBPlog)
View(dataBPlinear)
source("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/group/trial statistic.R")
lograteTT <- dataTTlog["coeff trials", ]
loginterceptTT <- dataTTlog["coeff (Intercept)", ]
lograteTP <- dataTPlog["coeff trials", ]
loginterceptTP <- dataTPlog["coeff (Intercept)", ]
lograteBT <- dataBTlog["coeff trials", ]
loginterceptBT <- dataBTlog["coeff (Intercept)", ]
lograteBP <- dataBPlog["coeff trials", ]
loginterceptBP <- dataBPlog["coeff (Intercept)", ]
lograteN <- dataNlog["coeff trials", ]
loginterceptN <- dataNlog["coeff (Intercept)", ]
View(loginterceptBP)
View(dataTTlinear)
View(loginterceptBT)
View(lograteBP)
View(lograteN)
View(loginterceptTT)
View(loginterceptTP)
hist(lograteTT)
lograteTT <- as.numeric(lograteTT)
hist(lograteTT)
lograteTT <- as.numeric(dataTTlog["coeff trials", ])
setwd("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/group")
library("ggplot2")
library("BayesFactor")
library("XLConnect")
dataTTlog <- read.csv("TTtrialLog.csv", header = TRUE)
dataTTlinear <- read.csv("TTtrialLinear.csv", header = TRUE)
dataTPlog <- read.csv("TPtrialLog.csv", header = TRUE)
dataTPlinear <- read.csv("TPtrialLinear.csv", header = TRUE)
dataBTlog <- read.csv("BTtrialLog.csv", header = TRUE)
dataBTlinear <- read.csv("BTtrialLinear.csv", header = TRUE)
dataBPlog <- read.csv("BPtrialLog.csv", header = TRUE)
dataBPlinear <- read.csv("BPtrialLinear.csv", header = TRUE)
dataNlog <- read.csv("NtrialLog.csv", header = TRUE)
dataNlinear <- read.csv("NtrialLinear.csv", header = TRUE)
rownames(dataTTlog) <- dataTTlog[, 1]
dataTTlog <- dataTTlog[, -1]
means <- rowMeans(dataTTlog, na.rm = TRUE)
dataTTlog <- cbind(dataTTlog, means)
rownames(dataTTlinear) <- dataTTlinear[, 1]
dataTTlinear <- dataTTlinear[, -1]
means <- rowMeans(dataTTlinear, na.rm = TRUE)
dataTTlinear <- cbind(dataTTlinear, means)
rownames(dataTPlog) <- dataTPlog[, 1]
dataTPlog <- dataTPlog[, -1]
means <- rowMeans(dataTPlog, na.rm = TRUE)
dataTPlog <- cbind(dataTPlog, means)
rownames(dataTPlinear) <- dataTPlinear[, 1]
dataTPlinear <- dataTPlinear[, -1]
means <- rowMeans(dataTPlinear, na.rm = TRUE)
dataTPlinear <- cbind(dataTPlinear, means)
rownames(dataBTlog) <- dataBTlog[, 1]
dataBTlog <- dataBTlog[, -1]
means <- rowMeans(dataBTlog, na.rm = TRUE)
dataBTlog <- cbind(dataBTlog, means)
rownames(dataBTlinear) <- dataBTlinear[, 1]
dataBTlinear <- dataBTlinear[, -1]
means <- rowMeans(dataBTlinear, na.rm = TRUE)
dataBTlinear <- cbind(dataBTlinear, means)
rownames(dataBPlog) <- dataBPlog[, 1]
dataBPlog <- dataBPlog[, -1]
means <- rowMeans(dataBPlog, na.rm = TRUE)
dataBPlog <- cbind(dataBPlog, means)
rownames(dataBPlinear) <- dataBPlinear[, 1]
dataBPlinear <- dataBPlinear[, -1]
means <- rowMeans(dataBPlinear, na.rm = TRUE)
dataBPlinear <- cbind(dataBPlinear, means)
rownames(dataNlog) <- dataNlog[, 1]
dataNlog <- dataNlog[, -1]
means <- rowMeans(dataNlog, na.rm = TRUE)
dataNlog <- cbind(dataNlog, means)
rownames(dataNlinear) <- dataNlinear[, 1]
dataNlinear <- dataNlinear[, -1]
means <- rowMeans(dataNlinear, na.rm = TRUE)
dataNlinear <- cbind(dataNlinear, means)
lograteTT <- as.numeric(dataTTlog["coeff trials", ])
hist(lograteTT)
hist(lograteTP)
lograteTT <- as.numeric(dataTTlog["coeff trials", ])
loginterceptTT <- as.numberic(dataTTlog["coeff (Intercept)", ])
lograteTP <- as.numberic(dataTPlog["coeff trials", ])
loginterceptTP <- as.numberic(dataTPlog["coeff (Intercept)", ])
lograteBT <- as.numberic(dataBTlog["coeff trials", ])
loginterceptBT <- as.numberic(dataBTlog["coeff (Intercept)", ])
lograteBP <- as.numberic(dataBPlog["coeff trials", ])
loginterceptBP <- as.numberic(dataBPlog["coeff (Intercept)", ])
lograteN <- as.numberic(dataNlog["coeff trials", ])
loginterceptN <- as.numberic(dataNlog["coeff (Intercept)", ])
lograteTT <- as.numeric(dataTTlog["coeff trials", ])
loginterceptTT <- as.numeric(dataTTlog["coeff (Intercept)", ])
lograteTP <- as.numeric(dataTPlog["coeff trials", ])
loginterceptTP <- as.numeric(dataTPlog["coeff (Intercept)", ])
lograteBT <- as.numeric(dataBTlog["coeff trials", ])
loginterceptBT <- as.numeric(dataBTlog["coeff (Intercept)", ])
lograteBP <- as.numeric(dataBPlog["coeff trials", ])
loginterceptBP <- as.numeric(dataBPlog["coeff (Intercept)", ])
lograteN <- as.numeric(dataNlog["coeff trials", ])
loginterceptN <- as.numeric(dataNlog["coeff (Intercept)", ])
hist(lograteTP)
hist(lograteBT)
hist(lograteBP)
hist(lograteN)
hist(lograteTT) hist(loginterceptTT)
hist(loginterceptTT)
hist(lograteTP)
hist(lograteBT)
hist(loginterceptBP)
hist(loginterceptN)
lograteTT <- dataTTlinear["coeff trials", "means"]
loginterceptTT <- dataTTlinear["coeff (Intercept)", "means"]
lograteTP <- dataTPlinear["coeff trials", "means"]
loginterceptTP <- dataTPlinear["coeff (Intercept)", "means"]
lograteBT <- dataBTlinear["coeff trials", "means"]
loginterceptBT <- dataBTlinear["coeff (Intercept)", "means"]
lograteBP <- dataBPlinear["coeff trials", "means"]
loginterceptBP <- dataBPlinear["coeff (Intercept)", "means"]
lograteN <- dataNlinear["coeff trials", "means"]
loginterceptN <- dataNlinear["coeff (Intercept)", "means"]
View(dataTTlinear)
lograteTT <- dataTTlog["coeff trials", "means"]
loginterceptTT <- dataTTlog["coeff (Intercept)", "means"]
lograteTP <- dataTPlog["coeff trials", "means"]
loginterceptTP <- dataTPlog["coeff (Intercept)", "means"]
lograteBT <- dataBTlog["coeff trials", "means"]
loginterceptBT <- dataBTlog["coeff (Intercept)", "means"]
lograteBP <- dataBPlog["coeff trials", "means"]
loginterceptBP <- dataBPlOG["coeff (Intercept)", "means"]
lograteN <- dataNlog["coeff trials", "means"]
loginterceptN <- dataNlog["coeff (Intercept)", "means"]
View(dataTTlinear)
linearrateTT <- dataTTlinear["coeff trial", "means"]
linearinterceptTT <- dataTTlinear["coeff (Intercept)", "means"]
linearrateTP <- dataTPlinear["coeff trial", "means"]
linearinterceptTP <- dataTPlinear["coeff (Intercept)", "means"]
linearrateBT <- dataBTlinear["coeff trial", "means"]
linearinterceptBT <- dataBTlinear["coeff (Intercept)", "means"]
linearrateBP <- dataBPlinear["coeff trial", "means"]
linearinterceptBP <- dataBPlinear["coeff (Intercept)", "means"]
linearrateN <- dataNlinear["coeff trial", "means"]
linearinterceptN <- dataNlinear["coeff (Intercept)", "means"]
lograteTT <- dataTTlog["coeff trials", "means"]
loginterceptTT <- dataTTlog["coeff (Intercept)", "means"]
lograteTP <- dataTPlog["coeff trials", "means"]
loginterceptTP <- dataTPlog["coeff (Intercept)", "means"]
lograteBT <- dataBTlog["coeff trials", "means"]
loginterceptBT <- dataBTlog["coeff (Intercept)", "means"]
lograteBP <- dataBPlog["coeff trials", "means"]
loginterceptBP <- dataBPlOG["coeff (Intercept)", "means"]
lograteN <- dataNlog["coeff trials", "means"]
loginterceptN <- dataNlog["coeff (Intercept)", "means"]
lograteTT <- dataTTlog["coeff trials", "means"]
loginterceptTT <- dataTTlog["coeff (Intercept)", "means"]
lograteTP <- dataTPlog["coeff trials", "means"]
loginterceptTP <- dataTPlog["coeff (Intercept)", "means"]
lograteBT <- dataBTlog["coeff trials", "means"]
loginterceptBT <- dataBTlog["coeff (Intercept)", "means"]
lograteBP <- dataBPlog["coeff trials", "means"]
loginterceptBP <- dataBPlog["coeff (Intercept)", "means"]
lograteN <- dataNlog["coeff trials", "means"]
loginterceptN <- dataNlog["coeff (Intercept)", "means"]
lograteTT <- as.numeric(dataTTlog["coeff trials", ])
loginterceptTT <- as.numeric(dataTTlog["coeff (Intercept)", ])
lograteTP <- as.numeric(dataTPlog["coeff trials", ])
loginterceptTP <- as.numeric(dataTPlog["coeff (Intercept)", ])
lograteBT <- as.numeric(dataBTlog["coeff trials", ])
loginterceptBT <- as.numeric(dataBTlog["coeff (Intercept)", ])
lograteBP <- as.numeric(dataBPlog["coeff trials", ])
loginterceptBP <- as.numeric(dataBPlog["coeff (Intercept)", ])
lograteN <- as.numeric(dataNlog["coeff trials", ])
loginterceptN <- as.numeric(dataNlog["coeff (Intercept)", ])
dataANOVA <- data.frame(lograteTT, lograteTP, lograteBT, lograteBP, lograteN)
data.frame
help("data.frame")
