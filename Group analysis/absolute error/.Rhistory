q()
1+1
y
getwd
getwd()
?regressionBF
setwd("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/absolute error")
library("ggplot2")
library("BayesFactor")
library("XLConnect")
library("ggpubr")
library("tidyverse")
library("broom")
library("AICcmodavg")
library("rstatix")
library("MBESS")
library("rstatix")
setwd("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/absolute error")
library("ggplot2")
library("BayesFactor")
library("XLConnect")
library("ggpubr")
library("tidyverse")
library("broom")
library("AICcmodavg")
library("rstatix")
library("MBESS")
library("rstatix")
data <- read.csv("perceived inaccuracy.csv", header = TRUE)
kruskal.test(data$response ~ data$group)
data <- read.csv("perceived inaccuracy.csv", header = TRUE)
kruskal.test(data$response ~ data$group)
View(data)
data <- read.csv("perceived inaccuracy.csv", header = TRUE)
View(data)
kruskal.test(data$response ~ data$group)
setwd("F:/Tools/Rworkspace/FYP-data-analysis/Group analysis/absolute error")
library("ggplot2")
library("BayesFactor")
library("XLConnect")
library("ggpubr")
library("tidyverse")
library("broom")
library("AICcmodavg")
library("rstatix")
library("MBESS")
library("rstatix")
file_list <- list.files(pattern = ".*accuracy.*.csv")
data <- data.frame()
start_end <- data.frame()
rowlength <- data.frame()
standard_deviation <- data.frame()
dataS <- data.frame()
for (i in 1:length(file_list)){
I <- read.csv(file_list[i], header = TRUE)
ID <- file_list[i]
Before <- head(I, 15)
After <- tail(I, 15)
sdtest <- data.frame()
for (k in 1:length(Before)){
K1 <- Before[, k]
K2 <- After[, k]
sdO <- cbind(sd(K1), sd(K2))
sdtest <- rbind(sdtest, sdO)
standard_deviation <- rbind.data.frame(standard_deviation, sdO)
}
names(sdtest) <- c("sdB", "sdA")
ttestSD <- t.test(sdtest$sdB, sdtest$sdA, paired = TRUE)
dataSO <- cbind(ID, ttestSD$statistic, ttestSD$p.value, ttestSD$stderr)
dataS <- rbind.data.frame(dataS, dataSO)
Before <- colMeans(Before)
After <- colMeans(After)
ttest <- t.test(Before, After, paried=TRUE)
dataO <- cbind(ID, ttest$statistic, ttest$p.value, ttest$stderr)
data <- rbind.data.frame(data, dataO)
afterO <- cbind(ID, Before, After)
start_end <- rbind.data.frame(start_end, afterO)
rowlength <- rbind(rowlength, nrow(afterO))
}
names(data) <- c("ID", "t-value", "p-value", "Std error")
write.csv(data, "start-endTtest2'.csv")
names(dataS) <- c("ID", "t-value", "p-value", "Std error")
write.csv(dataS, "sdTtest2'.csv")
r55 <- cbind(rep("Trial true", as.numeric(rowlength[5,1])), rep("Trial", as.numeric(rowlength[5,1])), rep("True", as.numeric(rowlength[5,1])), rep("with", as.numeric(rowlength[5,1])))
r44 <- cbind(rep("Trial positive", as.numeric(rowlength[4,1])), rep("Trial", as.numeric(rowlength[4,1])), rep("positive", as.numeric(rowlength[4,1])), rep("with", as.numeric(rowlength[4,1])))
r22 <- cbind(rep("Block true", as.numeric(rowlength[2,1])), rep("Block", as.numeric(rowlength[2,1])), rep("True", as.numeric(rowlength[2,1])), rep("with", as.numeric(rowlength[2,1])))
r11 <- cbind(rep("Block positive", as.numeric(rowlength[1,1])), rep("Block", as.numeric(rowlength[1,1])), rep("positive", as.numeric(rowlength[1,1])), rep("with", as.numeric(rowlength[1,1])))
r33 <- cbind(rep("No feedback", as.numeric(rowlength[3,1])), rep("None", as.numeric(rowlength[3,1])), rep("None", as.numeric(rowlength[3,1])), rep("without", as.numeric(rowlength[3,1])))
# organize data for error
start_end <- start_end[, -1]
dataANOVA <- cbind.data.frame(rbind.data.frame(r11,r22,r33,r44,r55), start_end)
colnames(dataANOVA) <- data.frame("group", "frequency", "content","feedback", "First", "Last")
write.csv(dataANOVA, "ANOVAmean2.csv")
dataANOVA <- read.csv("ANOVAmean2.csv", header = TRUE)
# organize data for sd
dataSD <- cbind.data.frame(rbind.data.frame(r11,r22,r33,r44,r55), standard_deviation)
colnames(dataSD) <- data.frame("group", "frequency", "content","feedback", "First", "Last")
write.csv(dataSD, "standard deviation.csv")
dataSD <- read.csv("standard deviation.csv", header = TRUE)
# analysis for standard deviation
# organize data
dataSD <- dataSD %>%
gather(key = "time", value = "sd", First, Last) %>%
convert_as_factor(group, time)
dataSD %>%
group_by(group, time) %>%
get_summary_stats(sd, type = "mean_sd")
#check assumptions
dataSD %>%
group_by(time, group) %>%
identify_outliers(sd)
